input {
  http {
    port => "${LOGSTASH_HTTP_PORT}"
      codec => "json"
        response_headers => {
          "Access-Control-Allow-Origin" => "*"
          "Content-Type" => "application/json"
          "Access-Control-Allow-Headers" => "Origin, X-Requested-With, Content-Type, Accept"
        }
		response_code => 204
      }
    }
filter {
    mutate {
        remove_field => [ "user_agent", "url",   "host", "@timestamp", "@version", "http"]
    }
    ruby {
        code => '
            event.get("data").each { |k, v|
                event.set(k,v)
            }
            event.remove("data")
        '
    }
	mutate {
        remove_field => [ "event"]
    }
}

output {
  rabbitmq {
	host => "${RABBITMQ_HOST}"
	password => "${RABBITMQ_PASSWORD}"
	user => "${RABBITMQ_USER}"
	exchange => "senzing-rabbitmq-exchange"
	exchange_type => "direct"
	durable => false
	key => "senzing.records"
  }
}
